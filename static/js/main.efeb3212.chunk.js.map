{"version":3,"sources":["components/CurrencyTile.module.css","components/KeyPrompt.module.css","components/Select.module.css","components/Button.module.css","components/ExchangeGrid.module.css","components/App.module.css","constants.ts","api/index.ts","api/mock.ts","util.ts","components/Button.tsx","components/CurrencyTile.tsx","components/ExchangeGrid.tsx","components/Input.tsx","components/KeyPrompt.tsx","components/Select.tsx","components/App.tsx","reportWebVitals.ts","index.tsx","components/Input.module.css"],"names":["module","exports","DefaultSymbol","DebugApiKey","UnauthorizedError","message","name","Error","fetchExchangeRatesAPIData","endpoint","params","a","url","URL","search","toString","fetch","href","response","ok","status","json","data","fetchRates","apiKey","URLSearchParams","access_key","base","Base","rates","fetchSymbols","symbols","OUTDATED_RATES","OUTDATED_SYMBOLS","console","debug","Valid","Promise","res","maxPrecision","n","maxDigits","factor","int","Math","round","Button","props","className","styles","component","onClick","text","CurrencyTile","symbol","selected","join","title","value","ExchangeGrid","amount","convert","Object","entries","map","from","to","Input","useState","String","inputValue","setInputValue","type","label","onEnter","setValue","min","Infinity","max","size","step","container","input","onChange","ev","target","trim","parseFloat","isNaN","onKeyUp","key","undefined","KeyPrompt","setApiKey","notice","Invalid","block","Select","options","select","i","opt","Template","children","header","App","setAmount","symbolBase","setSymbolBase","Target","symbolTarget","setSymbolTarget","setRates","setSymbols","setConvert","error","setError","useEffect","length","isDebugKey","includes","symbolFetcher","mocked","ratesFetcher","window","location","protocol","err","assign","c","Cashify","bind","convertedValue","controls","keys","output","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,UAAY,gCAAgC,SAAW,+BAA+B,OAAS,6BAA6B,MAAQ,8B,mBCAtJD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,yBAAyB,OAAS,4B,mBCArGD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,OAAS,yB,mBCA/FD,EAAOC,QAAU,CAAC,UAAY,4B,mBCA9BD,EAAOC,QAAU,CAAC,UAAY,kC,kBCA9BD,EAAOC,QAAU,CAAC,OAAS,oBAAoB,QAAU,qBAAqB,UAAY,uBAAuB,SAAW,sBAAsB,MAAQ,mBAAmB,MAAQ,mBAAmB,OAAS,oBAAoB,KAAO,kBAAkB,OAAS,oBAAoB,OAAS,sB,gECDxRC,EAKAC,E,uHALAD,K,WAAAA,E,cAAAA,M,cAKAC,K,aAAAA,E,wBAAAA,M,KCHZ,IA4BaC,EAAb,kDACE,WAAaC,GAAmB,IAAD,8BAC7B,cAAMA,IACDC,KAAO,oBAFiB,EADjC,sBAAuCC,QAOhC,SAAeC,EAAtB,oC,4CAAO,WACLC,EACAC,GAFK,mBAAAC,EAAA,6DAICC,EAAM,IAAIC,IAAJ,4CAA6CJ,KACrDK,OAASJ,EAAOK,WALf,SAMkBC,MAAMJ,EAAIK,MAN5B,WAMCC,EAND,QAQSC,GART,oBAnCqB,MA4CpBD,EAASE,OATV,uBAUK,IAAIhB,EAAkB,kDAV3B,cAYQ,IAAIG,MAAM,mBAZlB,yBAecW,EAASG,OAfvB,eAeCC,EAfD,yBAgBEA,GAhBF,6C,sBAoBA,SAAeC,EAAtB,kC,4CAAO,WAA2BC,GAA3B,mBAAAb,EAAA,4DACY,SACXD,EAAS,IAAIe,gBAAgB,CAACC,WAAYF,EAAQG,KAAMzB,EAAc0B,OAFvE,SAGiBpB,EAFL,SAE6DE,GAHzE,uBAGEmB,EAHF,EAGEA,MAHF,kBAIEA,GAJF,4C,sBAOA,SAAeC,EAAtB,kC,4CAAO,WAA6BN,GAA7B,mBAAAb,EAAA,4DACY,UACXD,EAAS,IAAIe,gBAAgB,CAACC,WAAYF,IAF3C,SAGmBhB,EAFP,UAEgEE,GAH5E,uBAGEqB,EAHF,EAGEA,QAHF,kBAIEA,GAJF,4C,sBC7DP,IAAMC,EAAiB,CACrB,IAAO,SACP,IAAO,UACP,IAAO,WACP,IAAO,UACP,IAAO,SACP,IAAO,WACP,IAAO,WACP,IAAO,SACP,IAAO,SACP,IAAO,SACP,IAAO,SACP,IAAO,SACP,IAAO,WACP,IAAO,SACP,IAAO,QACP,IAAO,YACP,IAAO,SACP,IAAO,SACP,IAAO,QACP,IAAO,SACP,IAAO,SACP,IAAO,aACP,IAAO,UACP,IAAO,UACP,IAAO,SACP,IAAO,aACP,IAAO,SACP,IAAO,SACP,IAAO,YACP,IAAO,SACP,IAAO,QACP,IAAO,WACP,IAAO,QACP,IAAO,YACP,IAAO,WACP,IAAO,SACP,IAAO,UACP,IAAO,WACP,IAAO,UACP,IAAO,WACP,IAAO,SACP,IAAO,UACP,IAAO,WACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,EACP,IAAO,SACP,IAAO,QACP,IAAO,QACP,IAAO,QACP,IAAO,QACP,IAAO,SACP,IAAO,QACP,IAAO,UACP,IAAO,aACP,IAAO,SACP,IAAO,WACP,IAAO,SACP,IAAO,SACP,IAAO,SACP,IAAO,WACP,IAAO,WACP,IAAO,aACP,IAAO,SACP,IAAO,QACP,IAAO,UACP,IAAO,YACP,IAAO,aaACP,IAAO,UACP,IAAO,YACP,IAAO,UACP,IAAO,UACP,IAAO,UACP,IAAO,SACP,IAAO,SACP,IAAO,SACP,IAAO,QACP,IAAO,SACP,IAAO,UACP,IAAO,YACP,IAAO,UACP,IAAO,YACP,IAAO,SACP,IAAO,UACP,IAAO,aACP,IAAO,iBACP,IAAO,aACP,IAAO,WACP,IAAO,OACP,IAAO,WACP,IAAO,QACP,IAAO,OACP,IAAO,SACP,IAAO,QACP,IAAO,SACP,IAAO,UACP,IAAO,WACP,IAAO,UACP,IAAO,aACP,IAAO,UACP,IAAO,YAGHC,EAAmB,CACvB,IAAO,8BACP,IAAO,iBACP,IAAO,eACP,IAAO,gBACP,IAAO,gCACP,IAAO,iBACP,IAAO,iBACP,IAAO,oBACP,IAAO,gBACP,IAAO,oBACP,IAAO,sCACP,IAAO,mBACP,IAAO,mBACP,IAAO,gBACP,IAAO,iBACP,IAAO,kBACP,IAAO,kBACP,IAAO,gBACP,IAAO,qBACP,IAAO,iBACP,IAAO,kBACP,IAAO,UACP,IAAO,qBACP,IAAO,iBACP,IAAO,uBACP,IAAO,mBACP,IAAO,gBACP,IAAO,kBACP,IAAO,kBACP,IAAO,cACP,IAAO,+BACP,IAAO,eACP,IAAO,eACP,IAAO,iBACP,IAAO,uBACP,IAAO,yBACP,IAAO,aACP,IAAO,sBACP,IAAO,wBACP,IAAO,mBACP,IAAO,eACP,IAAO,iBACP,IAAO,iBACP,IAAO,iBACP,IAAO,iBACP,IAAO,iBACP,IAAO,OACP,IAAO,gBACP,IAAO,yBACP,IAAO,yBACP,IAAO,gBACP,IAAO,iBACP,IAAO,gBACP,IAAO,kBACP,IAAO,iBACP,IAAO,gBACP,IAAO,qBACP,IAAO,mBACP,IAAO,mBACP,IAAO,mBACP,IAAO,gBACP,IAAO,iBACP,IAAO,mBACP,IAAO,oBACP,IAAO,qBACP,IAAO,aACP,IAAO,eACP,IAAO,cACP,IAAO,eACP,IAAO,qBACP,IAAO,eACP,IAAO,kBACP,IAAO,kBACP,IAAO,eACP,IAAO,kBACP,IAAO,iBACP,IAAO,iBACP,IAAO,iBACP,IAAO,mBACP,IAAO,mBACP,IAAO,gBACP,IAAO,wBACP,IAAO,oBACP,IAAO,cACP,IAAO,iBACP,IAAO,mBACP,IAAO,kBACP,IAAO,eACP,IAAO,mBACP,IAAO,eACP,IAAO,eACP,IAAO,kBACP,IAAO,eACP,IAAO,kBACP,IAAO,mBACP,IAAO,cACP,IAAO,mBACP,IAAO,kBACP,IAAO,sBACP,IAAO,kBACP,IAAO,oBACP,IAAO,kBACP,IAAO,eACP,IAAO,oBACP,IAAO,qBACP,IAAO,kBACP,IAAO,iBACP,IAAO,wBACP,IAAO,kBACP,IAAO,iBACP,IAAO,qBACP,IAAO,aACP,IAAO,oBACP,IAAO,qBACP,IAAO,yBACP,IAAO,kBACP,IAAO,kBACP,IAAO,eACP,IAAO,qBACP,IAAO,cACP,IAAO,eACP,IAAO,gBACP,IAAO,gBACP,IAAO,gBACP,IAAO,cACP,IAAO,yBACP,IAAO,oBACP,IAA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","file":"static/js/main.efeb3212.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"CurrencyTile_component__1Ors-\",\"selected\":\"CurrencyTile_selected__L4JYs\",\"symbol\":\"CurrencyTile_symbol__2e7yC\",\"value\":\"CurrencyTile_value__27Z-j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"KeyPrompt_component__10lIS\",\"block\":\"KeyPrompt_block__3CuAu\",\"notice\":\"KeyPrompt_notice__PsVlI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Select_container__3FjKg\",\"label\":\"Select_label__3F2rH\",\"select\":\"Select_select__3wCDr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Button_component__3eCjY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"ExchangeGrid_component__8d7Ap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__14Wxn\",\"message\":\"App_message__1bgJE\",\"container\":\"App_container__6j1zw\",\"controls\":\"App_controls__37A1K\",\"block\":\"App_block__wdQh6\",\"input\":\"App_input__3MFPR\",\"output\":\"App_output__Q6mnj\",\"base\":\"App_base__1AY4z\",\"target\":\"App_target__2a6Oj\",\"amount\":\"App_amount__2VrC2\"};","export enum DefaultSymbol {\n  Base = 'EUR',\n  Target = 'USD',\n}\n\nexport enum DebugApiKey {\n  Valid = 'test',\n  Invalid = 'test.invalid',\n}\n","import {DefaultSymbol} from '../constants';\n\nconst STATUS_UNAUTHORIZED = 401;\n\nexport type Rates = {\n  [symbol: string]: number;\n};\n\n// https://exchangeratesapi.io/documentation/#latestrates\nexport type ResponseDataLatest = {\n  success: boolean;\n  /** Unix time */\n  timestamp: number;\n  /** Symbol */\n  base: string;\n  /** yyyy-mm-dd */\n  date: string;\n  rates: Rates;\n};\n\nexport type Symbols = {\n  [symbol: string]: string;\n};\n\n// https://exchangeratesapi.io/documentation/#supportedsymbols\nexport type ResponseDataSymbols = {\n  success: boolean;\n  symbols: Symbols;\n};\n\nexport class UnauthorizedError extends Error {\n  constructor (message?: string) {\n    super(message);\n    this.name = 'UnauthorizedError';\n  }\n}\n\nexport async function fetchExchangeRatesAPIData <T = unknown>(\n  endpoint: string,\n  params: URLSearchParams,\n): Promise<T> {\n  const url = new URL(`http://api.exchangeratesapi.io/v1/${endpoint}`);\n  url.search = params.toString();\n  const response = await fetch(url.href);\n\n  if (!response.ok) {\n    if (response.status === STATUS_UNAUTHORIZED) {\n      throw new UnauthorizedError('There was a problem using the API key provided');\n    }\n    else throw new Error('Response not OK');\n  }\n\n  const data = await response.json() as T;\n  return data;\n}\n\n\nexport async function fetchRates (apiKey: string): Promise<Rates> {\n  const endpoint = 'latest';\n  const params = new URLSearchParams({access_key: apiKey, base: DefaultSymbol.Base});\n  const {rates} = await fetchExchangeRatesAPIData<ResponseDataLatest>(endpoint, params);\n  return rates;\n}\n\nexport async function fetchSymbols (apiKey: string): Promise<Symbols> {\n  const endpoint = 'symbols';\n  const params = new URLSearchParams({access_key: apiKey});\n  const {symbols} = await fetchExchangeRatesAPIData<ResponseDataSymbols>(endpoint, params);\n  return symbols;\n}\n","import {Rates, Symbols, UnauthorizedError} from './index';\nimport {DebugApiKey} from '../constants';\n\nconst OUTDATED_RATES = {\n  \"AED\": 4.461345,\n  \"AFN\": 93.829561,\n  \"ALL\": 122.677153,\n  \"AMD\": 634.15372,\n  \"ANG\": 2.180227,\n  \"AOA\": 794.697824,\n  \"ARS\": 114.006087,\n  \"AUD\": 1.549415,\n  \"AWG\": 2.186326,\n  \"AZN\": 2.066712,\n  \"BAM\": 1.953217,\n  \"BBD\": 2.452361,\n  \"BDT\": 102.990726,\n  \"BGN\": 1.954666,\n  \"BHD\": 0.457853,\n  \"BIF\": 2393.419267,\n  \"BMD\": 1.214625,\n  \"BND\": 1.610152,\n  \"BOB\": 8.37455,\n  \"BRL\": 6.343626,\n  \"BSD\": 1.214545,\n  \"BTC\": 2.1341597e-5,\n  \"BTN\": 88.966161,\n  \"BWP\": 12.976604,\n  \"BYN\": 3.081478,\n  \"BYR\": 23806.657005,\n  \"BZD\": 2.448307,\n  \"CAD\": 1.469144,\n  \"CDF\": 2430.465063,\n  \"CHF\": 1.097775,\n  \"CLF\": 0.030924,\n  \"CLP\": 853.277601,\n  \"CNY\": 7.80907,\n  \"COP\": 4508.701473,\n  \"CRC\": 746.840241,\n  \"CUC\": 1.214625,\n  \"CUP\": 32.187572,\n  \"CVE\": 110.664442,\n  \"CZK\": 25.508594,\n  \"DJF\": 215.862864,\n  \"DKK\": 7.435475,\n  \"DOP\": 69.051834,\n  \"DZD\": 161.756401,\n  \"EGP\": 19.045573,\n  \"ERN\": 18.221702,\n  \"ETB\": 51.439312,\n  \"EUR\": 1,\n  \"FJD\": 2.461313,\n  \"FKP\": 0.882273,\n  \"GBP\": 0.858947,\n  \"GEL\": 4.15361,\n  \"GGP\": 0.882273,\n  \"GHS\": 6.990196,\n  \"GIP\": 0.882273,\n  \"GMD\": 62.308802,\n  \"GNF\": 12012.644688,\n  \"GTQ\": 9.370561,\n  \"GYD\": 254.016966,\n  \"HKD\": 9.436607,\n  \"HNL\": 29.27008,\n  \"HRK\": 7.525329,\n  \"HTG\": 103.807996,\n  \"HUF\": 358.230718,\n  \"IDR\": 17233.104571,\n  \"ILS\": 3.995279,\n  \"IMP\": 0.882273,\n  \"INR\": 89.115603,\n  \"IQD\": 1776.389585,\n  \"IRR\": 51141.800612,\n  \"ISK\": 150.504336,\n  \"JEP\": 0.882273,\n  \"JMD\": 183.522103,\n  \"JOD\": 0.861163,\n  \"JPY\": 131.959938,\n  \"KES\": 129.364175,\n  \"KGS\": 102.924317,\n  \"KHR\": 4937.452314,\n  \"KMF\": 491.563164,\n  \"KPW\": 1093.163055,\n  \"KRW\": 1360.040456,\n  \"KWD\": 0.36508,\n  \"KYD\": 1.012105,\n  \"KZT\": 518.656263,\n  \"LAK\": 11453.91743,\n  \"LBP\": 1854.73246,\n  \"LKR\": 238.666088,\n  \"LRD\": 208.79358,\n  \"LSL\": 16.980363,\n  \"LTL\": 3.586473,\n  \"LVL\": 0.734715,\n  \"LYD\": 5.423254,\n  \"MAD\": 10.734249,\n  \"MDL\": 21.581733,\n  \"MGA\": 4573.064056,\n  \"MKD\": 61.532696,\n  \"MMK\": 1891.716898,\n  \"MNT\": 3462.474671,\n  \"MOP\": 9.717203,\n  \"MRO\": 433.621044,\n  \"MUR\": 49.240954,\n  \"MVR\": 18.713449,\n  \"MWK\": 965.626987,\n  \"MXN\": 24.265372,\n  \"MYR\": 5.002433,\n  \"MZN\": 71.085987,\n  \"NAD\": 16.980468,\n  \"NGN\": 461.557525,\n  \"NIO\": 42.694525,\n  \"NOK\": 10.041283,\n  \"NPR\": 142.345978,\n  \"NZD\": 1.671196,\n  \"OMR\": 0.467582,\n  \"PAB\": 1.21452,\n  \"PEN\": 4.466782,\n  \"PGK\": 4.28152,\n  \"PHP\": 58.143713,\n  \"PKR\": 184.926868,\n  \"PLN\": 4.539903,\n  \"PYG\": 8218.316404,\n  \"QAR\": 4.422415,\n  \"RON\": 4.927375,\n  \"RSD\": 117.422939,\n  \"RUB\": 90.033493,\n  \"RWF\": 1202.479104,\n  \"SAR\": 4.555151,\n  \"SBD\": 9.68991,\n  \"SCR\": 18.634156,\n  \"SDG\": 495.566996,\n  \"SEK\": 10.101693,\n  \"SGD\": 1.610721,\n  \"SHP\": 0.882273,\n  \"SLL\": 12437.76372,\n  \"SOS\": 710.555657,\n  \"SRD\": 17.191811,\n  \"STD\": 25178.136689,\n  \"SVC\": 10.627572,\n  \"SYP\": 1527.473264,\n  \"SZL\": 16.980255,\n  \"THB\": 37.859962,\n  \"TJS\": 13.851473,\n  \"TMT\": 4.251189,\n  \"TND\": 3.311676,\n  \"TOP\": 2.731082,\n  \"TRY\": 10.0662,\n  \"TTD\": 8.259129,\n  \"TWD\": 33.939299,\n  \"TZS\": 2816.442942,\n  \"UAH\": 33.596263,\n  \"UGX\": 4305.441185,\n  \"USD\": 1.214625,\n  \"UYU\": 53.277151,\n  \"UZS\": 12814.297224,\n  \"VEF\": 259723610228.549,\n  \"VND\": 28009.260741,\n  \"VUV\": 133.048681,\n  \"WST\": 3.0751,\n  \"XAF\": 655.134651,\n  \"XAG\": 0.043969,\n  \"XAU\": 0.000661,\n  \"XCD\": 3.282586,\n  \"XDR\": 0.842043,\n  \"XOF\": 657.7126,\n  \"XPF\": 119.45776,\n  \"YER\": 303.655945,\n  \"ZAR\": 17.008496,\n  \"ZMK\": 10933.087556,\n  \"ZMW\": 27.180644,\n  \"ZWL\": 391.109602\n};\n\nconst OUTDATED_SYMBOLS = {\n  \"AED\": \"United Arab Emirates Dirham\",\n  \"AFN\": \"Afghan Afghani\",\n  \"ALL\": \"Albanian Lek\",\n  \"AMD\": \"Armenian Dram\",\n  \"ANG\": \"Netherlands Antillean Guilder\",\n  \"AOA\": \"Angolan Kwanza\",\n  \"ARS\": \"Argentine Peso\",\n  \"AUD\": \"Australian Dollar\",\n  \"AWG\": \"Aruban Florin\",\n  \"AZN\": \"Azerbaijani Manat\",\n  \"BAM\": \"Bosnia-Herzegovina Convertible Mark\",\n  \"BBD\": \"Barbadian Dollar\",\n  \"BDT\": \"Bangladeshi Taka\",\n  \"BGN\": \"Bulgarian Lev\",\n  \"BHD\": \"Bahraini Dinar\",\n  \"BIF\": \"Burundian Franc\",\n  \"BMD\": \"Bermudan Dollar\",\n  \"BND\": \"Brunei Dollar\",\n  \"BOB\": \"Bolivian Boliviano\",\n  \"BRL\": \"Brazilian Real\",\n  \"BSD\": \"Bahamian Dollar\",\n  \"BTC\": \"Bitcoin\",\n  \"BTN\": \"Bhutanese Ngultrum\",\n  \"BWP\": \"Botswanan Pula\",\n  \"BYN\": \"New Belarusian Ruble\",\n  \"BYR\": \"Belarusian Ruble\",\n  \"BZD\": \"Belize Dollar\",\n  \"CAD\": \"Canadian Dollar\",\n  \"CDF\": \"Congolese Franc\",\n  \"CHF\": \"Swiss Franc\",\n  \"CLF\": \"Chilean Unit of Account (UF)\",\n  \"CLP\": \"Chilean Peso\",\n  \"CNY\": \"Chinese Yuan\",\n  \"COP\": \"Colombian Peso\",\n  \"CRC\": \"Costa Rican Col\\u00f3n\",\n  \"CUC\": \"Cuban Convertible Peso\",\n  \"CUP\": \"Cuban Peso\",\n  \"CVE\": \"Cape Verdean Escudo\",\n  \"CZK\": \"Czech Republic Koruna\",\n  \"DJF\": \"Djiboutian Franc\",\n  \"DKK\": \"Danish Krone\",\n  \"DOP\": \"Dominican Peso\",\n  \"DZD\": \"Algerian Dinar\",\n  \"EGP\": \"Egyptian Pound\",\n  \"ERN\": \"Eritrean Nakfa\",\n  \"ETB\": \"Ethiopian Birr\",\n  \"EUR\": \"Euro\",\n  \"FJD\": \"Fijian Dollar\",\n  \"FKP\": \"Falkland Islands Pound\",\n  \"GBP\": \"British Pound Sterling\",\n  \"GEL\": \"Georgian Lari\",\n  \"GGP\": \"Guernsey Pound\",\n  \"GHS\": \"Ghanaian Cedi\",\n  \"GIP\": \"Gibraltar Pound\",\n  \"GMD\": \"Gambian Dalasi\",\n  \"GNF\": \"Guinean Franc\",\n  \"GTQ\": \"Guatemalan Quetzal\",\n  \"GYD\": \"Guyanaese Dollar\",\n  \"HKD\": \"Hong Kong Dollar\",\n  \"HNL\": \"Honduran Lempira\",\n  \"HRK\": \"Croatian Kuna\",\n  \"HTG\": \"Haitian Gourde\",\n  \"HUF\": \"Hungarian Forint\",\n  \"IDR\": \"Indonesian Rupiah\",\n  \"ILS\": \"Israeli New Sheqel\",\n  \"IMP\": \"Manx pound\",\n  \"INR\": \"Indian Rupee\",\n  \"IQD\": \"Iraqi Dinar\",\n  \"IRR\": \"Iranian Rial\",\n  \"ISK\": \"Icelandic Kr\\u00f3na\",\n  \"JEP\": \"Jersey Pound\",\n  \"JMD\": \"Jamaican Dollar\",\n  \"JOD\": \"Jordanian Dinar\",\n  \"JPY\": \"Japanese Yen\",\n  \"KES\": \"Kenyan Shilling\",\n  \"KGS\": \"Kyrgystani Som\",\n  \"KHR\": \"Cambodian Riel\",\n  \"KMF\": \"Comorian Franc\",\n  \"KPW\": \"North Korean Won\",\n  \"KRW\": \"South Korean Won\",\n  \"KWD\": \"Kuwaiti Dinar\",\n  \"KYD\": \"Cayman Islands Dollar\",\n  \"KZT\": \"Kazakhstani Tenge\",\n  \"LAK\": \"Laotian Kip\",\n  \"LBP\": \"Lebanese Pound\",\n  \"LKR\": \"Sri Lankan Rupee\",\n  \"LRD\": \"Liberian Dollar\",\n  \"LSL\": \"Lesotho Loti\",\n  \"LTL\": \"Lithuanian Litas\",\n  \"LVL\": \"Latvian Lats\",\n  \"LYD\": \"Libyan Dinar\",\n  \"MAD\": \"Moroccan Dirham\",\n  \"MDL\": \"Moldovan Leu\",\n  \"MGA\": \"Malagasy Ariary\",\n  \"MKD\": \"Macedonian Denar\",\n  \"MMK\": \"Myanma Kyat\",\n  \"MNT\": \"Mongolian Tugrik\",\n  \"MOP\": \"Macanese Pataca\",\n  \"MRO\": \"Mauritanian Ouguiya\",\n  \"MUR\": \"Mauritian Rupee\",\n  \"MVR\": \"Maldivian Rufiyaa\",\n  \"MWK\": \"Malawian Kwacha\",\n  \"MXN\": \"Mexican Peso\",\n  \"MYR\": \"Malaysian Ringgit\",\n  \"MZN\": \"Mozambican Metical\",\n  \"NAD\": \"Namibian Dollar\",\n  \"NGN\": \"Nigerian Naira\",\n  \"NIO\": \"Nicaraguan C\\u00f3rdoba\",\n  \"NOK\": \"Norwegian Krone\",\n  \"NPR\": \"Nepalese Rupee\",\n  \"NZD\": \"New Zealand Dollar\",\n  \"OMR\": \"Omani Rial\",\n  \"PAB\": \"Panamanian Balboa\",\n  \"PEN\": \"Peruvian Nuevo Sol\",\n  \"PGK\": \"Papua New Guinean Kina\",\n  \"PHP\": \"Philippine Peso\",\n  \"PKR\": \"Pakistani Rupee\",\n  \"PLN\": \"Polish Zloty\",\n  \"PYG\": \"Paraguayan Guarani\",\n  \"QAR\": \"Qatari Rial\",\n  \"RON\": \"Romanian Leu\",\n  \"RSD\": \"Serbian Dinar\",\n  \"RUB\": \"Russian Ruble\",\n  \"RWF\": \"Rwandan Franc\",\n  \"SAR\": \"Saudi Riyal\",\n  \"SBD\": \"Solomon Islands Dollar\",\n  \"SCR\": \"Seychellois Rupee\",\n  \"SDG\": \"Sudanese Pound\",\n  \"SEK\": \"Swedish Krona\",\n  \"SGD\": \"Singapore Dollar\",\n  \"SHP\": \"Saint Helena Pound\",\n  \"SLL\": \"Sierra Leonean Leone\",\n  \"SOS\": \"Somali Shilling\",\n  \"SRD\": \"Surinamese Dollar\",\n  \"STD\": \"S\\u00e3o Tom\\u00e9 and Pr\\u00edncipe Dobra\",\n  \"SVC\": \"Salvadoran Col\\u00f3n\",\n  \"SYP\": \"Syrian Pound\",\n  \"SZL\": \"Swazi Lilangeni\",\n  \"THB\": \"Thai Baht\",\n  \"TJS\": \"Tajikistani Somoni\",\n  \"TMT\": \"Turkmenistani Manat\",\n  \"TND\": \"Tunisian Dinar\",\n  \"TOP\": \"Tongan Pa\\u02bbanga\",\n  \"TRY\": \"Turkish Lira\",\n  \"TTD\": \"Trinidad and Tobago Dollar\",\n  \"TWD\": \"New Taiwan Dollar\",\n  \"TZS\": \"Tanzanian Shilling\",\n  \"UAH\": \"Ukrainian Hryvnia\",\n  \"UGX\": \"Ugandan Shilling\",\n  \"USD\": \"United States Dollar\",\n  \"UYU\": \"Uruguayan Peso\",\n  \"UZS\": \"Uzbekistan Som\",\n  \"VEF\": \"Venezuelan Bol\\u00edvar Fuerte\",\n  \"VND\": \"Vietnamese Dong\",\n  \"VUV\": \"Vanuatu Vatu\",\n  \"WST\": \"Samoan Tala\",\n  \"XAF\": \"CFA Franc BEAC\",\n  \"XAG\": \"Silver (troy ounce)\",\n  \"XAU\": \"Gold (troy ounce)\",\n  \"XCD\": \"East Caribbean Dollar\",\n  \"XDR\": \"Special Drawing Rights\",\n  \"XOF\": \"CFA Franc BCEAO\",\n  \"XPF\": \"CFP Franc\",\n  \"YER\": \"Yemeni Rial\",\n  \"ZAR\": \"South African Rand\",\n  \"ZMK\": \"Zambian Kwacha (pre-2013)\",\n  \"ZMW\": \"Zambian Kwacha\",\n  \"ZWL\": \"Zimbabwean Dollar\"\n};\n\n/** Must use `\"secret\"` for `apiKey` argument to avoid throwing */\nexport function fetchRates (apiKey: string): Promise<Rates> {\n  console.debug('Fetching rates');\n  if (apiKey !== DebugApiKey.Valid) {\n    throw new UnauthorizedError('There was a problem using the API key provided');\n  }\n  return new Promise(res => res(OUTDATED_RATES));\n}\n\n/** Must use `\"secret\"` for `apiKey` argument to avoid throwing */\nexport function fetchSymbols (apiKey: string): Promise<Symbols> {\n  console.debug('Fetching symbols');\n  if (apiKey !== DebugApiKey.Valid) {\n    throw new UnauthorizedError('There was a problem using the API key provided');\n  }\n  return new Promise(res => res(OUTDATED_SYMBOLS));\n}\n","export function flatten (obj: object): unknown[] {\n  const array: unknown[] = [];\n  for (const value of Array.isArray(obj) ? obj : Object.values(obj)) {\n    if (typeof value !== 'object' || value === null) array.push(value);\n    else array.push(...flatten(value));\n  }\n  return array;\n}\n\nexport function maxPrecision (n: number, maxDigits = 2): number {\n  const factor = 1 * (10 ** maxDigits);\n  const int = Math.round(n * factor);\n  return int / factor;\n}\n","import React from 'react';\nimport styles from './Button.module.css';\n\ntype Props = {\n  onClick: () => unknown;\n  text: string;\n};\n\nfunction Button (props: Props): React.ReactElement {\n  return (\n    <button\n      className={styles.component}\n      onClick={props.onClick}\n    >{props.text}</button>\n  );\n}\n\nexport default Button;\n","import React from 'react';\nimport styles from './CurrencyTile.module.css';\n\ntype Props = {\n  name: string;\n  selected: boolean;\n  symbol: string;\n  value: number;\n};\n\nfunction CurrencyTile (props: Props): React.ReactElement {\n  return (\n    <div className={styles.component}>\n      <span\n        className={[styles.symbol, props.selected ? styles.selected : ''].join(' ')}\n        title={props.name}\n      >{props.symbol}</span>\n      <div className={styles.value}>{props.value}</div>\n    </div>\n  );\n}\n\nexport default CurrencyTile;\n","import React from 'react';\nimport type {Cashify} from 'cashify';\nimport {maxPrecision} from '../util';\nimport type {Symbols} from '../api';\nimport styles from './ExchangeGrid.module.css';\nimport CurrencyTile from './CurrencyTile';\n\ntype Props = {\n  amount: number;\n  base: string;\n  convert: Cashify['convert'];\n  symbols: Symbols;\n};\n\nfunction ExchangeGrid (props: Props): React.ReactElement {\n  const {amount, base, convert, symbols} = props;\n\n  return (\n    <div className={styles.component}>\n      {Object.entries(symbols).map(([symbol, name]) => {\n        const value = maxPrecision(convert(\n          amount,\n          {from: base, to: symbol},\n        ), 6);\n        return <CurrencyTile\n          key={symbol}\n          selected={symbol === base}\n          {...{name, symbol, value}}\n        />\n      })}\n    </div>\n  );\n}\n\nexport default ExchangeGrid;\n","import React, {useState} from 'react';\nimport styles from './Input.module.css';\n\ntype Props = (\n  | {\n    label: string;\n    max?: number;\n    min?: number;\n    onEnter?: (ev: React.KeyboardEvent<HTMLInputElement>) => unknown;\n    size?: number;\n    step?: number;\n    type: 'number';\n    value: number;\n    setValue: React.Dispatch<React.SetStateAction<number>>;\n  }\n  | {\n    label: string;\n    onEnter?: (ev: React.KeyboardEvent<HTMLInputElement>) => unknown;\n    size?: number;\n    type: 'text';\n    value: string;\n    setValue: React.Dispatch<React.SetStateAction<string>>;\n  }\n);\n\nfunction Input (props: Props): React.ReactElement {\n  const [inputValue, setInputValue] = useState(String(props.value));\n\n  if (props.type === 'number') {\n    const {label, onEnter, setValue, type} = props;\n    const min = props.min ?? -Infinity;\n    const max = props.min ?? Infinity;\n    const size = props.size ?? 1;\n    const step = props.step ?? 1;\n\n    const handleChange: React.ChangeEventHandler<HTMLInputElement> = ev => {\n      const {value} = ev.target;\n      setInputValue(value);\n      if (!value.trim()) {\n        setValue(0);\n        return;\n      }\n      const n = parseFloat(value);\n      if (!isNaN(n)) setValue(n);\n    };\n\n    return (\n      <label className={styles.container}>\n        <span className={styles.label}>{label}</span>\n        <input\n          className={styles.input}\n          onChange={handleChange}\n          onKeyUp={typeof onEnter === 'function'\n            ? ev => {\n              ev.key === 'Enter' && onEnter(ev);\n            }\n            : undefined\n          }\n          {...{max, min, size, step, type, value: inputValue}}\n        ></input>\n      </label>\n    );\n  }\n  else {\n    const {label, onEnter, setValue, type, value} = props;\n    const size = props.size ?? 1;\n\n    return (\n      <label className={styles.container}>\n        <span className={styles.label}>{label}</span>\n        <input\n          className={styles.input}\n          onChange={({target: {value}}) => setValue(value)}\n          onKeyUp={typeof onEnter === 'function'\n            ? ev => {\n              ev.key === 'Enter' && onEnter(ev);\n            }\n            : undefined\n          }\n          {...{size, type, value}}\n        ></input>\n      </label>\n    );\n  }\n}\n\nexport default Input;\n","import React, {useState} from 'react';\nimport {DebugApiKey} from '../constants';\n\nimport styles from './KeyPrompt.module.css';\n\nimport Button from './Button';\nimport Input from './Input';\n\ntype Props = {\n  setApiKey: React.Dispatch<React.SetStateAction<string>>;\n};\n\nfunction KeyPrompt (props: Props): React.ReactElement {\n  const [value, setValue] = useState('');\n\n  const setApiKey = (): void => props.setApiKey(value.trim());\n\n  return (\n    <div className={styles.component}>\n      <blockquote className={styles.notice}>\n        <p>\n          This app\n          uses <a href=\"https://exchangeratesapi.io/\">exchangeratesapi.io</a> as\n          its source of exchange rate data, and—in order to fetch that data—a\n          valid API key is required. Please provide one in order to continue.\n        </p>\n        <p>\n          Alternatively, you can explore this app using cached, stale data\n          (and avoid making any network API requests) by using the\n          value <code>{DebugApiKey.Valid}</code>. To simulate an invalid API key\n          in this mode, use <code>{DebugApiKey.Invalid}</code>.\n        </p>\n      </blockquote>\n      <Input type=\"text\" label=\"API key\" onEnter={setApiKey} {...{value, setValue}} />\n      <div className={styles.block}>\n        <Button text=\"Update\" onClick={setApiKey} />\n      </div>\n    </div>\n  );\n}\n\nexport default KeyPrompt;\n","import React from 'react';\nimport styles from './Select.module.css';\n\ntype Props = {\n  label: string;\n  options: ([text: string, value: string] | string)[];\n  setValue: React.Dispatch<React.SetStateAction<string>>;\n  value: string;\n};\n\nfunction Select (props: Props): React.ReactElement {\n  const {label, options, setValue, value} = props;\n  return (\n    <label className={styles.container}>\n      <span className={styles.label}>{label}</span>\n      <select\n        className={styles.select}\n        onChange={({target: {value}}) => setValue(value)}\n        {...{value}}\n      >\n        {[...options.entries()].map(([i, opt]) => {\n          const [text, value] = typeof opt === 'string'\n            ? [opt, opt]\n            : opt;\n          const key = `${i}${value}`;\n          return <option {...{key, value}}>{text}</option>;\n        })}\n      </select>\n    </label>\n  );\n}\n\nexport default Select;\n","import React, {useEffect, useState} from 'react';\nimport * as mocked from '../api/mock';\nimport {fetchRates, fetchSymbols, Rates, Symbols, UnauthorizedError} from '../api';\nimport {DebugApiKey, DefaultSymbol} from '../constants';\nimport {Cashify} from 'cashify';\nimport {maxPrecision} from '../util';\n\nimport styles from './App.module.css';\n\nimport Button from './Button';\nimport ExchangeGrid from './ExchangeGrid';\nimport Input from './Input';\nimport KeyPrompt from './KeyPrompt';\nimport Select from './Select';\n\nfunction Template ({children}: {\n  children: React.ReactNode;\n}): React.ReactElement {\n  return (\n    <div>\n      <header className={styles.header}>\n        <h1>Currency Converter</h1>\n      </header>\n      {children}\n    </div>\n  );\n}\n\nfunction App (): React.ReactElement {\n  const [apiKey, setApiKey] = useState('');\n  const [amount, setAmount] = useState(1);\n  const [symbolBase, setSymbolBase] = useState<string>(DefaultSymbol.Base);\n  const [symbolTarget, setSymbolTarget] = useState<string>(DefaultSymbol.Target);\n  const [rates, setRates] = useState<Rates>();\n  const [symbols, setSymbols] = useState<Symbols>();\n  const [convert, setConvert] = useState<Cashify['convert']>();\n  const [error, setError] = useState<Error>();\n\n  useEffect(() => {\n    if (apiKey.length === 0) return;\n    (async () => {\n      try {\n        const isDebugKey = ([DebugApiKey.Valid, DebugApiKey.Invalid] as string[]).includes(apiKey);\n        if (!symbols) {\n          const symbolFetcher = isDebugKey ? mocked.fetchSymbols : fetchSymbols;\n          const symbols = await symbolFetcher(apiKey);\n          setSymbols(symbols);\n          return;\n        }\n        const ratesFetcher = isDebugKey ? mocked.fetchRates : fetchRates;\n        const rates = await ratesFetcher(apiKey);\n        setRates(rates);\n      }\n      catch (ex) {\n        console.error(ex);\n\n        if (ex instanceof UnauthorizedError) {\n          setApiKey('');\n          return;\n        }\n\n        if (window.location.protocol === 'https:') {\n          const err = Object.assign(new Error(), {\n            name: 'MixedContentError',\n            message: 'App must be served at a URL beginning with \"http:\"',\n          });\n          setError(err);\n          return;\n        }\n\n        setError(ex);\n      }\n    })();\n  }, [apiKey, symbolBase, symbols]);\n\n  useEffect(() => {\n    if (!rates) return;\n    const c = new Cashify({base: DefaultSymbol.Base, rates});\n    setConvert(() => c.convert.bind(c));\n  }, [rates]);\n\n  const switchSymbols = (): void => {\n    const base = symbolBase;\n    const target = symbolTarget;\n    setSymbolBase(target);\n    setSymbolTarget(base);\n  };\n\n  if (error) {\n    return (\n      <Template>\n        <div className={styles.message}>\n          <p>An error was encountered:</p>\n          <p>{error.name}: {error.message}</p>\n          <p>You can try reloading the app.</p>\n        </div>\n      </Template>\n    );\n  }\n\n  if (apiKey.length === 0) {\n    return (\n      <Template>\n        <KeyPrompt {...{setApiKey}} />\n      </Template>\n    );\n  }\n\n  if (!(rates && symbols && convert)) {\n    return (\n      <Template>\n        <div className={styles.message}>Getting latest rates…</div>\n      </Template>\n    );\n  }\n\n  const convertedValue = maxPrecision(convert(\n    amount,\n    {from: symbolBase, to: symbolTarget},\n  ));\n\n  return (\n    <Template>\n      <div className={styles.container}>\n        <div className={styles.controls}>\n          <div className={styles.block}>\n            <Select\n              label=\"Base\"\n              options={Object.keys(symbols)}\n              setValue={setSymbolBase}\n              value={symbolBase}\n            />\n          </div>\n          <div className={styles.block}>\n            <Button onClick={switchSymbols} text=\"Switch\" />\n          </div>\n          <div className={styles.block}>\n            <Select\n              label=\"Target\"\n              options={Object.keys(symbols)}\n              setValue={setSymbolTarget}\n              value={symbolTarget}\n            />\n          </div>\n          <div className={styles.input}>\n            <Input\n              label=\"Amount\"\n              setValue={setAmount}\n              type=\"number\"\n              value={amount}\n            />\n          </div>\n          <div className={styles.output}>\n            <div className={styles.base}>\n              <span className={styles.amount}>\n                {amount}\n              </span> <span className={styles.symbol}>\n                {symbolBase}\n              </span> =\n            </div>\n            <div className={styles.target}>\n              <span className={styles.amount}>\n                {convertedValue}\n              </span> <span className={styles.symbol}>\n                {symbolTarget}\n              </span>\n            </div>\n          </div>\n        </div>\n        <ExchangeGrid\n          base={symbolBase}\n          {...{amount, convert, symbols}}\n        />\n      </div>\n    </Template>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'sanitize.css';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('react-root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Input_container__16MGs\",\"label\":\"Input_label__3-Wil\",\"input\":\"Input_input__24dvw\"};"],"sourceRoot":""}